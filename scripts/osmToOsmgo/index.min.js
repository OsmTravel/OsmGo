"use strict";function t(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function e(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?t(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function r(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}Object.defineProperty(exports,"__esModule",{value:!0});var n={centimeters:637100880,centimetres:637100880,degrees:6371008.8/111325,feet:20902260.511392,inches:6371008.8*39.37,kilometers:6371.0088,kilometres:6371.0088,meters:6371008.8,metres:6371008.8,miles:3958.761333810546,millimeters:6371008800,millimetres:6371008800,nauticalmiles:6371008.8/1852,radians:1,yards:6371008.8*1.0936};function o(t,e,r){void 0===r&&(r={});var n={type:"Feature"};return(0===r.id||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=e||{},n.geometry=t,n}function i(t,e,r){if(void 0===r&&(r={}),!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!u(t[0])||!u(t[1]))throw new Error("coordinates must contain numbers");return o({type:"Point",coordinates:t},e,r)}function s(t,e,r){if(void 0===r&&(r={}),t.length<2)throw new Error("coordinates must be an array of two or more positions");return o({type:"LineString",coordinates:t},e,r)}function a(t,e){void 0===e&&(e={});var r={type:"FeatureCollection"};return e.id&&(r.id=e.id),e.bbox&&(r.bbox=e.bbox),r.features=t,r}function l(t){return t%360*Math.PI/180}function u(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function p(t,e,r){if(null!==t)for(var n,o,i,s,a,l,u,c,f=0,h=0,g=t.type,y="FeatureCollection"===g,d="Feature"===g,m=y?t.features.length:1,v=0;v<m;v++){a=(c=!!(u=y?t.features[v].geometry:d?t.geometry:t)&&"GeometryCollection"===u.type)?u.geometries.length:1;for(var b=0;b<a;b++){var w=0,P=0;if(null!==(s=c?u.geometries[b]:u)){l=s.coordinates;var k=s.type;switch(f=!r||"Polygon"!==k&&"MultiPolygon"!==k?0:1,k){case null:break;case"Point":if(!1===e(l,h,v,w,P))return!1;h++,w++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++){if(!1===e(l[n],h,v,w,P))return!1;h++,"MultiPoint"===k&&w++}"LineString"===k&&w++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(o=0;o<l[n].length-f;o++){if(!1===e(l[n][o],h,v,w,P))return!1;h++}"MultiLineString"===k&&w++,"Polygon"===k&&P++}"Polygon"===k&&w++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for(P=0,o=0;o<l[n].length;o++){for(i=0;i<l[n][o].length-f;i++){if(!1===e(l[n][o][i],h,v,w,P))return!1;h++}P++}w++}break;case"GeometryCollection":for(n=0;n<s.geometries.length;n++)if(!1===p(s.geometries[n],e,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function c(t,e){if("Feature"===t.type)e(t,0);else if("FeatureCollection"===t.type)for(var r=0;r<t.features.length&&!1!==e(t.features[r],r);r++);}function f(t,e){var r,n,o,i,s,a,l,u,p,c,f=0,h="FeatureCollection"===t.type,g="Feature"===t.type,y=h?t.features.length:1;for(r=0;r<y;r++){for(a=h?t.features[r].geometry:g?t.geometry:t,u=h?t.features[r].properties:g?t.properties:{},p=h?t.features[r].bbox:g?t.bbox:void 0,c=h?t.features[r].id:g?t.id:void 0,s=(l=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,o=0;o<s;o++)if(null!==(i=l?a.geometries[o]:a))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===e(i,f,u,p,c))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===e(i.geometries[n],f,u,p,c))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===e(null,f,u,p,c))return!1;f++}}function h(t,e){!function(t,e){f(t,(function(t,r,n,i,s){var a,l=null===t?null:t.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return!1!==e(o(t,n,{bbox:i,id:s}),r,0)&&void 0}switch(l){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon"}for(var u=0;u<t.coordinates.length;u++){var p=t.coordinates[u];if(!1===e(o({type:a,coordinates:p},n),r,u))return!1}}))}(t,(function(t,r,n){var o=0;if(t.geometry){var i=t.geometry.type;if("Point"!==i&&"MultiPoint"!==i){var a,l=0,u=0,c=0;return!1!==p(t,(function(i,p,f,h,g){if(void 0===a||r>l||h>u||g>c)return a=i,l=r,u=h,c=g,void(o=0);var y=s([a,i],t.properties);if(!1===e(y,r,n,g,o))return!1;o++,a=i}))&&void 0}}}))}function g(t){var e=[];return"FeatureCollection"===t.type?c(t,(function(t){p(t,(function(r){e.push(i(r,t.properties))}))})):p(t,(function(r){e.push(i(r,t.properties))})),a(e)}function y(t){var e=[1/0,1/0,-1/0,-1/0];return p(t,(function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])})),e}function d(t){if(!t)throw new Error("geojson is required");switch(t.type){case"Feature":return m(t);case"FeatureCollection":return function(t){var e={type:"FeatureCollection"};return Object.keys(t).forEach((function(r){switch(r){case"type":case"features":return;default:e[r]=t[r]}})),e.features=t.features.map((function(t){return m(t)})),e}(t);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return b(t);default:throw new Error("unknown GeoJSON type")}}function m(t){var e={type:"Feature"};return Object.keys(t).forEach((function(r){switch(r){case"type":case"properties":case"geometry":return;default:e[r]=t[r]}})),e.properties=v(t.properties),e.geometry=b(t.geometry),e}function v(t){var e={};return t?(Object.keys(t).forEach((function(r){var n=t[r];"object"==typeof n?null===n?e[r]=null:Array.isArray(n)?e[r]=n.map((function(t){return t})):e[r]=v(n):e[r]=n})),e):e}function b(t){var e={type:t.type};return t.bbox&&(e.bbox=t.bbox),"GeometryCollection"===t.type?(e.geometries=t.geometries.map((function(t){return b(t)})),e):(e.coordinates=w(t.coordinates),e)}function w(t){var e=t;return"object"!=typeof e[0]?e.slice():e.map((function(t){return w(t)}))}function P(t){if(!t)throw new Error("coord is required");if(!Array.isArray(t)){if("Feature"===t.type&&null!==t.geometry&&"Point"===t.geometry.type)return t.geometry.coordinates;if("Point"===t.type)return t.coordinates}if(Array.isArray(t)&&t.length>=2&&!Array.isArray(t[0])&&!Array.isArray(t[1]))return t;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function k(t,e,r){void 0===r&&(r={});var o=P(t),i=P(e),s=l(i[1]-o[1]),a=l(i[0]-o[0]),u=l(o[1]),p=l(i[1]),c=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(a/2),2)*Math.cos(u)*Math.cos(p);return function(t,e){void 0===e&&(e="kilometers");var r=n[e];if(!r)throw new Error(e+" units is invalid");return t*r}(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),r.units)}function E(t,e,r){if(void 0===r&&(r={}),!t)throw new Error("point is required");if(!e)throw new Error("polygon is required");var n,o=P(t),i="Feature"===(n=e).type?n.geometry:n,s=i.type,a=e.bbox,l=i.coordinates;if(a&&!1===function(t,e){return e[0]<=t[0]&&e[1]<=t[1]&&e[2]>=t[0]&&e[3]>=t[1]}(o,a))return!1;"Polygon"===s&&(l=[l]);for(var u=!1,p=0;p<l.length&&!u;p++)if(S(o,l[p][0],r.ignoreBoundary)){for(var c=!1,f=1;f<l[p].length&&!c;)S(o,l[p][f],!r.ignoreBoundary)&&(c=!0),f++;c||(u=!0)}return u}function S(t,e,r){var n=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var o=0,i=e.length-1;o<e.length;i=o++){var s=e[o][0],a=e[o][1],l=e[i][0],u=e[i][1];if(t[1]*(s-l)+a*(l-t[0])+u*(t[0]-s)==0&&(s-t[0])*(l-t[0])<=0&&(a-t[1])*(u-t[1])<=0)return!r;a>t[1]!=u>t[1]&&t[0]<(l-s)*(t[1]-a)/(u-a)+s&&(n=!n)}return n}function O(t){for(var e=function(t){if("FeatureCollection"!==t.type)return"Feature"!==t.type?a([o(t)]):a([t]);return t}(t),r=function(t,e){void 0===e&&(e={});var r=y(t);return i([(r[0]+r[2])/2,(r[1]+r[3])/2],e.properties,e)}(e),n=!1,s=0;!n&&s<e.features.length;){var l,u=e.features[s].geometry,p=!1;if("Point"===u.type)r.geometry.coordinates[0]===u.coordinates[0]&&r.geometry.coordinates[1]===u.coordinates[1]&&(n=!0);else if("MultiPoint"===u.type){var f=!1;for(l=0;!f&&l<u.coordinates.length;)r.geometry.coordinates[0]===u.coordinates[l][0]&&r.geometry.coordinates[1]===u.coordinates[l][1]&&(n=!0,f=!0),l++}else if("LineString"===u.type)for(l=0;!p&&l<u.coordinates.length-1;)_(r.geometry.coordinates[0],r.geometry.coordinates[1],u.coordinates[l][0],u.coordinates[l][1],u.coordinates[l+1][0],u.coordinates[l+1][1])&&(p=!0,n=!0),l++;else if("MultiLineString"===u.type)for(var h=0;h<u.coordinates.length;){p=!1,l=0;for(var m=u.coordinates[h];!p&&l<m.length-1;)_(r.geometry.coordinates[0],r.geometry.coordinates[1],m[l][0],m[l][1],m[l+1][0],m[l+1][1])&&(p=!0,n=!0),l++;h++}else"Polygon"!==u.type&&"MultiPolygon"!==u.type||E(r,u)&&(n=!0);s++}if(n)return r;var v=a([]);for(s=0;s<e.features.length;s++)v.features=v.features.concat(g(e.features[s]).features);return i(function(t,e){if(!t)throw new Error("targetPoint is required");if(!e)throw new Error("points is required");var r,n=1/0,o=0;return c(e,(function(e,r){var i=k(t,e);i<n&&(o=r,n=i)})),(r=d(e.features[o])).properties.featureIndex=o,r.properties.distanceToPoint=n,r}(r,v).geometry.coordinates)}function _(t,e,r,n,o,i){return Math.sqrt((o-r)*(o-r)+(i-n)*(i-n))===Math.sqrt((t-r)*(t-r)+(e-n)*(e-n))+Math.sqrt((o-t)*(o-t)+(i-e)*(i-e))}y.default=y;function M(t){return function(t,e,r){var n=r;return f(t,(function(t,o,i,s,a){n=0===o&&void 0===r?t:e(n,t,o,i,s,a)})),n}(t,(function(t,e){return t+function(t){var e,r=0;switch(t.type){case"Polygon":return x(t.coordinates);case"MultiPolygon":for(e=0;e<t.coordinates.length;e++)r+=x(t.coordinates[e]);return r;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}(e)}),0)}function x(t){var e=0;if(t&&t.length>0){e+=Math.abs(j(t[0]));for(var r=1;r<t.length;r++)e-=Math.abs(j(t[r]))}return e}function j(t){var e,r,n,o,i,s,a=0,l=t.length;if(l>2){for(s=0;s<l;s++)s===l-2?(n=l-2,o=l-1,i=0):s===l-1?(n=l-1,o=0,i=1):(n=s,o=s+1,i=s+2),e=t[n],r=t[o],a+=(I(t[i][0])-I(e[0]))*Math.sin(I(r[1]));a=6378137*a*6378137/2}return a}function I(t){return t*Math.PI/180}function L(t,e){return void 0===e&&(e={}),function(t,e,r){var n=r,o=!1;return h(t,(function(t,i,s,a,l){n=!1===o&&void 0===r?t:e(n,t,i,s,a,l),o=!0})),n}(t,(function(t,r){var n=r.geometry.coordinates;return t+k(n[0],n[1],e)}),0)}function F(t,e){void 0===e&&(e={});var r=Number(t[0]),n=Number(t[1]),i=Number(t[2]),s=Number(t[3]);if(6===t.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var a=[r,n];return function(t,e,r){void 0===r&&(r={});for(var n=0,i=t;n<i.length;n++){var s=i[n];if(s.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<s[s.length-1].length;a++)if(s[s.length-1][a]!==s[0][a])throw new Error("First and last Position are not equivalent.")}return o({type:"Polygon",coordinates:t},e,r)}([[a,[i,n],[i,s],[r,s],a]],e.properties,{bbox:t,id:e.id})}function C(t,e){return t>e?1:t<e?-1:0}class T{constructor(t=C,e=!1){this._compare=t,this._root=null,this._size=0,this._noDuplicates=!!e}rotateLeft(t){var e=t.right;e&&(t.right=e.left,e.left&&(e.left.parent=t),e.parent=t.parent),t.parent?t===t.parent.left?t.parent.left=e:t.parent.right=e:this._root=e,e&&(e.left=t),t.parent=e}rotateRight(t){var e=t.left;e&&(t.left=e.right,e.right&&(e.right.parent=t),e.parent=t.parent),t.parent?t===t.parent.left?t.parent.left=e:t.parent.right=e:this._root=e,e&&(e.right=t),t.parent=e}_splay(t){for(;t.parent;){var e=t.parent;e.parent?e.left===t&&e.parent.left===e?(this.rotateRight(e.parent),this.rotateRight(e)):e.right===t&&e.parent.right===e?(this.rotateLeft(e.parent),this.rotateLeft(e)):e.left===t&&e.parent.right===e?(this.rotateRight(e),this.rotateLeft(e)):(this.rotateLeft(e),this.rotateRight(e)):e.left===t?this.rotateRight(e):this.rotateLeft(e)}}splay(t){for(var e,r,n,o,i;t.parent;)(r=(e=t.parent).parent)&&r.parent?((n=r.parent).left===r?n.left=t:n.right=t,t.parent=n):(t.parent=null,this._root=t),o=t.left,i=t.right,t===e.left?(r&&(r.left===e?(e.right?(r.left=e.right,r.left.parent=r):r.left=null,e.right=r,r.parent=e):(o?(r.right=o,o.parent=r):r.right=null,t.left=r,r.parent=t)),i?(e.left=i,i.parent=e):e.left=null,t.right=e,e.parent=t):(r&&(r.right===e?(e.left?(r.right=e.left,r.right.parent=r):r.right=null,e.left=r,r.parent=e):(i?(r.left=i,i.parent=r):r.left=null,t.right=r,r.parent=t)),o?(e.right=o,o.parent=e):e.right=null,t.left=e,e.parent=t)}replace(t,e){t.parent?t===t.parent.left?t.parent.left=e:t.parent.right=e:this._root=e,e&&(e.parent=t.parent)}minNode(t=this._root){if(t)for(;t.left;)t=t.left;return t}maxNode(t=this._root){if(t)for(;t.right;)t=t.right;return t}insert(t,e){var r=this._root,n=null,o=this._compare;if(this._noDuplicates)for(;r;){if(n=r,0===o(r.key,t))return;r=o(r.key,t)<0?r.right:r.left}else for(;r;)n=r,r=o(r.key,t)<0?r.right:r.left;return r={key:t,data:e,left:null,right:null,parent:n},n?o(n.key,r.key)<0?n.right=r:n.left=r:this._root=r,this.splay(r),this._size++,r}find(t){for(var e=this._root,r=this._compare;e;){var n=r(e.key,t);if(n<0)e=e.right;else{if(!(n>0))return e;e=e.left}}return null}contains(t){for(var e=this._root,r=this._compare;e;){var n=r(t,e.key);if(0===n)return!0;e=n<0?e.left:e.right}return!1}remove(t){var e=this.find(t);if(!e)return!1;if(this.splay(e),e.left)if(e.right){var r=this.minNode(e.right);r.parent!==e&&(this.replace(r,r.right),r.right=e.right,r.right.parent=r),this.replace(e,r),r.left=e.left,r.left.parent=r}else this.replace(e,e.left);else this.replace(e,e.right);return this._size--,!0}removeNode(t){if(!t)return!1;if(this.splay(t),t.left)if(t.right){var e=this.minNode(t.right);e.parent!==t&&(this.replace(e,e.right),e.right=t.right,e.right.parent=e),this.replace(t,e),e.left=t.left,e.left.parent=e}else this.replace(t,t.left);else this.replace(t,t.right);return this._size--,!0}erase(t){var e=this.find(t);if(e){this.splay(e);var r=e.left,n=e.right,o=null;r&&(r.parent=null,o=this.maxNode(r),this.splay(o),this._root=o),n&&(r?o.right=n:this._root=n,n.parent=o),this._size--}}pop(){var t=this._root,e=null;if(t){for(;t.left;)t=t.left;e={key:t.key,data:t.data},this.remove(t.key)}return e}next(t){var e=t;if(e)if(e.right)for(e=e.right;e&&e.left;)e=e.left;else for(e=t.parent;e&&e.right===t;)t=e,e=e.parent;return e}prev(t){var e=t;if(e)if(e.left)for(e=e.left;e&&e.right;)e=e.right;else for(e=t.parent;e&&e.left===t;)t=e,e=e.parent;return e}forEach(t){for(var e=this._root,r=[],n=!1,o=0;!n;)e?(r.push(e),e=e.left):r.length>0?(t(e=r.pop(),o++),e=e.right):n=!0;return this}range(t,e,r,n){const o=[],i=this._compare;let s,a=this._root;for(;0!==o.length||a;)if(a)o.push(a),a=a.left;else{if(a=o.pop(),s=i(a.key,e),s>0)break;if(i(a.key,t)>=0&&r.call(n,a))return this;a=a.right}return this}keys(){for(var t=this._root,e=[],r=[],n=!1;!n;)t?(e.push(t),t=t.left):e.length>0?(t=e.pop(),r.push(t.key),t=t.right):n=!0;return r}values(){for(var t=this._root,e=[],r=[],n=!1;!n;)t?(e.push(t),t=t.left):e.length>0?(t=e.pop(),r.push(t.data),t=t.right):n=!0;return r}at(t){for(var e=this._root,r=[],n=!1,o=0;!n;)if(e)r.push(e),e=e.left;else if(r.length>0){if(e=r.pop(),o===t)return e;o++,e=e.right}else n=!0;return null}load(t=[],e=[],r=!1){if(0!==this._size)throw new Error("bulk-load: tree is not empty");const n=t.length;return r&&N(t,e,0,n-1,this._compare),this._root=A(null,t,e,0,n),this._size=n,this}min(){var t=this.minNode(this._root);return t?t.key:null}max(){var t=this.maxNode(this._root);return t?t.key:null}isEmpty(){return null===this._root}get size(){return this._size}static createTree(t,e,r,n,o){return new T(r,o).load(t,e,n)}}function A(t,e,r,n,o){const i=o-n;if(i>0){const s=n+Math.floor(i/2),a={key:e[s],data:r[s],parent:t};return a.left=A(a,e,r,n,s),a.right=A(a,e,r,s+1,o),a}return null}function N(t,e,r,n,o){if(r>=n)return;const i=t[r+n>>1];let s=r-1,a=n+1;for(;;){do{s++}while(o(t[s],i)<0);do{a--}while(o(t[a],i)>0);if(s>=a)break;let r=t[s];t[s]=t[a],t[a]=r,r=e[s],e[s]=e[a],e[a]=r}N(t,e,r,a,o),N(t,e,a+1,n,o)}function R(t,e,r){null===e?(t.inOut=!1,t.otherInOut=!0):(t.isSubject===e.isSubject?(t.inOut=!e.inOut,t.otherInOut=e.otherInOut):(t.inOut=!e.otherInOut,t.otherInOut=e.isVertical()?!e.inOut:e.inOut),e&&(t.prevInResult=!G(e,r)||e.isVertical()?e.prevInResult:e));let n=G(t,r);t.resultTransition=n?function(t,e){let r,n=!t.inOut,o=!t.otherInOut;switch(e){case 0:r=n&&o;break;case 1:r=n||o;break;case 3:r=n^o;break;case 2:r=t.isSubject?n&&!o:o&&!n}return r?1:-1}(t,r):0}function G(t,e){switch(t.type){case 0:switch(e){case 0:return!t.otherInOut;case 1:return t.otherInOut;case 2:return t.isSubject&&t.otherInOut||!t.isSubject&&!t.otherInOut;case 3:return!0}break;case 2:return 0===e||1===e;case 3:return 2===e;case 1:return!1}return!1}class B{constructor(t,e,r,n,o){this.left=e,this.point=t,this.otherEvent=r,this.isSubject=n,this.type=o||0,this.inOut=!1,this.otherInOut=!1,this.prevInResult=null,this.resultTransition=0,this.otherPos=-1,this.outputContourId=-1,this.isExteriorRing=!0}isBelow(t){const e=this.point,r=this.otherEvent.point;return this.left?(e[0]-t[0])*(r[1]-t[1])-(r[0]-t[0])*(e[1]-t[1])>0:(r[0]-t[0])*(e[1]-t[1])-(e[0]-t[0])*(r[1]-t[1])>0}isAbove(t){return!this.isBelow(t)}isVertical(){return this.point[0]===this.otherEvent.point[0]}get inResult(){return 0!==this.resultTransition}clone(){const t=new B(this.point,this.left,this.otherEvent,this.isSubject,this.type);return t.contourId=this.contourId,t.resultTransition=this.resultTransition,t.prevInResult=this.prevInResult,t.isExteriorRing=this.isExteriorRing,t.inOut=this.inOut,t.otherInOut=this.otherInOut,t}}function q(t,e){return t[0]===e[0]&&t[1]===e[1]}function z(t,e,r,n,o){let i,s,a,l,u=e[0],p=n[0],c=0,f=0;p>u==p>-u?(i=u,u=e[++c]):(i=p,p=n[++f]);let h=0;if(c<t&&f<r)for(p>u==p>-u?(s=u+i,a=i-(s-u),u=e[++c]):(s=p+i,a=i-(s-p),p=n[++f]),i=s,0!==a&&(o[h++]=a);c<t&&f<r;)p>u==p>-u?(s=i+u,l=s-i,a=i-(s-l)+(u-l),u=e[++c]):(s=i+p,l=s-i,a=i-(s-l)+(p-l),p=n[++f]),i=s,0!==a&&(o[h++]=a);for(;c<t;)s=i+u,l=s-i,a=i-(s-l)+(u-l),u=e[++c],i=s,0!==a&&(o[h++]=a);for(;f<r;)s=i+p,l=s-i,a=i-(s-l)+(p-l),p=n[++f],i=s,0!==a&&(o[h++]=a);return 0===i&&0!==h||(o[h++]=i),h}function D(t){return new Float64Array(t)}const J=D(4),K=D(8),V=D(12),W=D(16),U=D(4);function H(t,e,r,n,o,i){const s=(e-i)*(r-o),a=(t-o)*(n-i),l=s-a;if(0===s||0===a||s>0!=a>0)return l;const u=Math.abs(s+a);return Math.abs(l)>=33306690738754716e-32*u?l:-function(t,e,r,n,o,i,s){let a,l,u,p,c,f,h,g,y,d,m,v,b,w,P,k,E,S;const O=t-o,_=r-o,M=e-i,x=n-i;w=O*x,f=134217729*O,h=f-(f-O),g=O-h,f=134217729*x,y=f-(f-x),d=x-y,P=g*d-(w-h*y-g*y-h*d),k=M*_,f=134217729*M,h=f-(f-M),g=M-h,f=134217729*_,y=f-(f-_),d=_-y,E=g*d-(k-h*y-g*y-h*d),m=P-E,c=P-m,J[0]=P-(m+c)+(c-E),v=w+m,c=v-w,b=w-(v-c)+(m-c),m=b-k,c=b-m,J[1]=b-(m+c)+(c-k),S=v+m,c=S-v,J[2]=v-(S-c)+(m-c),J[3]=S;let j=function(t,e){let r=e[0];for(let n=1;n<t;n++)r+=e[n];return r}(4,J),I=22204460492503146e-32*s;if(j>=I||-j>=I)return j;if(c=t-O,a=t-(O+c)+(c-o),c=r-_,u=r-(_+c)+(c-o),c=e-M,l=e-(M+c)+(c-i),c=n-x,p=n-(x+c)+(c-i),0===a&&0===l&&0===u&&0===p)return j;if(I=11093356479670487e-47*s+33306690738754706e-32*Math.abs(j),j+=O*p+x*a-(M*u+_*l),j>=I||-j>=I)return j;w=a*x,f=134217729*a,h=f-(f-a),g=a-h,f=134217729*x,y=f-(f-x),d=x-y,P=g*d-(w-h*y-g*y-h*d),k=l*_,f=134217729*l,h=f-(f-l),g=l-h,f=134217729*_,y=f-(f-_),d=_-y,E=g*d-(k-h*y-g*y-h*d),m=P-E,c=P-m,U[0]=P-(m+c)+(c-E),v=w+m,c=v-w,b=w-(v-c)+(m-c),m=b-k,c=b-m,U[1]=b-(m+c)+(c-k),S=v+m,c=S-v,U[2]=v-(S-c)+(m-c),U[3]=S;const L=z(4,J,4,U,K);w=O*p,f=134217729*O,h=f-(f-O),g=O-h,f=134217729*p,y=f-(f-p),d=p-y,P=g*d-(w-h*y-g*y-h*d),k=M*u,f=134217729*M,h=f-(f-M),g=M-h,f=134217729*u,y=f-(f-u),d=u-y,E=g*d-(k-h*y-g*y-h*d),m=P-E,c=P-m,U[0]=P-(m+c)+(c-E),v=w+m,c=v-w,b=w-(v-c)+(m-c),m=b-k,c=b-m,U[1]=b-(m+c)+(c-k),S=v+m,c=S-v,U[2]=v-(S-c)+(m-c),U[3]=S;const F=z(L,K,4,U,V);w=a*p,f=134217729*a,h=f-(f-a),g=a-h,f=134217729*p,y=f-(f-p),d=p-y,P=g*d-(w-h*y-g*y-h*d),k=l*u,f=134217729*l,h=f-(f-l),g=l-h,f=134217729*u,y=f-(f-u),d=u-y,E=g*d-(k-h*y-g*y-h*d),m=P-E,c=P-m,U[0]=P-(m+c)+(c-E),v=w+m,c=v-w,b=w-(v-c)+(m-c),m=b-k,c=b-m,U[1]=b-(m+c)+(c-k),S=v+m,c=S-v,U[2]=v-(S-c)+(m-c),U[3]=S;const C=z(F,V,4,U,W);return W[C-1]}(t,e,r,n,o,i,u)}function Q(t,e,r){const n=H(t[0],t[1],e[0],e[1],r[0],r[1]);return n>0?-1:n<0?1:0}function X(t,e){const r=t.point,n=e.point;return r[0]>n[0]?1:r[0]<n[0]?-1:r[1]!==n[1]?r[1]>n[1]?1:-1:function(t,e,r,n){if(t.left!==e.left)return t.left?1:-1;if(0!==Q(r,t.otherEvent.point,e.otherEvent.point))return t.isBelow(e.otherEvent.point)?-1:1;return!t.isSubject&&e.isSubject?1:-1}(t,e,r)}function Y(t,e,r){const n=new B(e,!1,t,t.isSubject),o=new B(e,!0,t.otherEvent,t.isSubject);return q(t.point,t.otherEvent.point)&&console.warn("what is that, a collapsed segment?",t),n.contourId=o.contourId=t.contourId,X(o,t.otherEvent)>0&&(t.otherEvent.left=!0,o.left=!1),t.otherEvent.otherEvent=o,t.otherEvent=n,r.push(o),r.push(n),r}function Z(t,e){return t[0]*e[1]-t[1]*e[0]}function $(t,e){return t[0]*e[0]+t[1]*e[1]}function tt(t,e,r){const n=function(t,e,r,n,o){const i=[e[0]-t[0],e[1]-t[1]],s=[n[0]-r[0],n[1]-r[1]];function a(t,e,r){return[t[0]+e*r[0],t[1]+e*r[1]]}const l=[r[0]-t[0],r[1]-t[1]];let u=Z(i,s),p=u*u;const c=$(i,i);if(p>0){const e=Z(l,s)/u;if(e<0||e>1)return null;const n=Z(l,i)/u;return n<0||n>1?null:0===e||1===e?o?null:[a(t,e,i)]:0===n||1===n?o?null:[a(r,n,s)]:[a(t,e,i)]}if(u=Z(l,i),p=u*u,p>0)return null;const f=$(i,l)/c,h=f+$(i,s)/c,g=Math.min(f,h),y=Math.max(f,h);return g<=1&&y>=0?1===g?o?null:[a(t,g>0?g:0,i)]:0===y?o?null:[a(t,y<1?y:1,i)]:o&&0===g&&1===y?null:[a(t,g>0?g:0,i),a(t,y<1?y:1,i)]:null}(t.point,t.otherEvent.point,e.point,e.otherEvent.point),o=n?n.length:0;if(0===o)return 0;if(1===o&&(q(t.point,e.point)||q(t.otherEvent.point,e.otherEvent.point)))return 0;if(2===o&&t.isSubject===e.isSubject)return 0;if(1===o)return q(t.point,n[0])||q(t.otherEvent.point,n[0])||Y(t,n[0],r),q(e.point,n[0])||q(e.otherEvent.point,n[0])||Y(e,n[0],r),1;const i=[];let s=!1,a=!1;return q(t.point,e.point)?s=!0:1===X(t,e)?i.push(e,t):i.push(t,e),q(t.otherEvent.point,e.otherEvent.point)?a=!0:1===X(t.otherEvent,e.otherEvent)?i.push(e.otherEvent,t.otherEvent):i.push(t.otherEvent,e.otherEvent),s&&a||s?(e.type=1,t.type=e.inOut===t.inOut?2:3,s&&!a&&Y(i[1].otherEvent,i[0].point,r),2):a?(Y(i[0],i[1].point,r),3):i[0]!==i[3].otherEvent?(Y(i[0],i[1].point,r),Y(i[1],i[2].point,r),3):(Y(i[0],i[1].point,r),Y(i[3].otherEvent,i[2].point,r),3)}function et(t,e){if(t===e)return 0;if(0!==Q(t.point,t.otherEvent.point,e.point)||0!==Q(t.point,t.otherEvent.point,e.otherEvent.point))return q(t.point,e.point)?t.isBelow(e.otherEvent.point)?-1:1:t.point[0]===e.point[0]?t.point[1]<e.point[1]?-1:1:1===X(t,e)?e.isAbove(t.point)?-1:1:t.isBelow(e.point)?-1:1;if(t.isSubject!==e.isSubject)return t.isSubject?-1:1;{let r=t.point,n=e.point;if(r[0]===n[0]&&r[1]===n[1])return r=t.otherEvent.point,n=e.otherEvent.point,r[0]===n[0]&&r[1]===n[1]?0:t.contourId>e.contourId?1:-1}return 1===X(t,e)?1:-1}class rt{constructor(){this.points=[],this.holeIds=[],this.holeOf=null,this.depth=null}isExterior(){return null==this.holeOf}}function nt(t,e,r,n){let o,i=t+1,s=e[t].point;const a=e.length;for(i<a&&(o=e[i].point);i<a&&o[0]===s[0]&&o[1]===s[1];){if(!r[i])return i;i++,i<a&&(o=e[i].point)}for(i=t-1;r[i]&&i>n;)i--;return i}function ot(t,e,r){const n=new rt;if(null!=t.prevInResult){const o=t.prevInResult,i=o.outputContourId;if(o.resultTransition>0){const t=e[i];if(null!=t.holeOf){const o=t.holeOf;e[o].holeIds.push(r),n.holeOf=o,n.depth=e[i].depth}else e[i].holeIds.push(r),n.holeOf=i,n.depth=e[i].depth+1}else n.holeOf=null,n.depth=e[i].depth}else n.holeOf=null,n.depth=0;return n}function it(t){let e,r;const n=function(t){let e,r,n,o;const i=[];for(r=0,n=t.length;r<n;r++)e=t[r],(e.left&&e.inResult||!e.left&&e.otherEvent.inResult)&&i.push(e);let s=!1;for(;!s;)for(s=!0,r=0,n=i.length;r<n;r++)r+1<n&&1===X(i[r],i[r+1])&&(o=i[r],i[r]=i[r+1],i[r+1]=o,s=!1);for(r=0,n=i.length;r<n;r++)e=i[r],e.otherPos=r;for(r=0,n=i.length;r<n;r++)e=i[r],e.left||(o=e.otherPos,e.otherPos=e.otherEvent.otherPos,e.otherEvent.otherPos=o);return i}(t),o={},i=[];for(e=0,r=n.length;e<r;e++){if(o[e])continue;const t=i.length,r=ot(n[e],i,t),s=e=>{o[e]=!0,e<n.length&&n[e]&&(n[e].outputContourId=t)};let a=e,l=e;const u=n[e].point;for(r.points.push(u);s(a),a=n[a].otherPos,s(a),r.points.push(n[a].point),a=nt(a,n,o,l),!(a==l||a>=n.length)&&n[a];);i.push(r)}return i}var st=lt,at=lt;function lt(t,e){if(!(this instanceof lt))return new lt(t,e);if(this.data=t||[],this.length=this.data.length,this.compare=e||ut,this.length>0)for(var r=(this.length>>1)-1;r>=0;r--)this._down(r)}function ut(t,e){return t<e?-1:t>e?1:0}lt.prototype={push:function(t){this.data.push(t),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var t=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),t}},peek:function(){return this.data[0]},_up:function(t){for(var e=this.data,r=this.compare,n=e[t];t>0;){var o=t-1>>1,i=e[o];if(r(n,i)>=0)break;e[t]=i,t=o}e[t]=n},_down:function(t){for(var e=this.data,r=this.compare,n=this.length>>1,o=e[t];t<n;){var i=1+(t<<1),s=i+1,a=e[i];if(s<this.length&&r(e[s],a)<0&&(i=s,a=e[s]),r(a,o)>=0)break;e[t]=a,t=i}e[t]=o}},st.default=at;const pt=Math.max,ct=Math.min;let ft=0;function ht(t,e,r,n,o,i){let s,a,l,u,p,c;for(s=0,a=t.length-1;s<a;s++){if(l=t[s],u=t[s+1],p=new B(l,!1,void 0,e),c=new B(u,!1,p,e),p.otherEvent=c,l[0]===u[0]&&l[1]===u[1])continue;p.contourId=c.contourId=r,i||(p.isExteriorRing=!1,c.isExteriorRing=!1),X(p,c)>0?c.left=!0:p.left=!0;const a=l[0],f=l[1];o[0]=ct(o[0],a),o[1]=ct(o[1],f),o[2]=pt(o[2],a),o[3]=pt(o[3],f),n.push(p),n.push(c)}}const gt=[];function yt(t,e,r){"number"==typeof t[0][0][0]&&(t=[t]),"number"==typeof e[0][0][0]&&(e=[e]);let n=function(t,e,r){let n=null;return t.length*e.length==0&&(0===r?n=gt:2===r?n=t:1!==r&&3!==r||(n=0===t.length?e:t)),n}(t,e,r);if(n)return n===gt?null:n;const o=[1/0,1/0,-1/0,-1/0],i=[1/0,1/0,-1/0,-1/0],s=function(t,e,r,n,o){const i=new st(null,X);let s,a,l,u,p,c;for(l=0,u=t.length;l<u;l++)for(s=t[l],p=0,c=s.length;p<c;p++)a=0===p,a&&ft++,ht(s[p],!0,ft,i,r,a);for(l=0,u=e.length;l<u;l++)for(s=e[l],p=0,c=s.length;p<c;p++)a=0===p,2===o&&(a=!1),a&&ft++,ht(s[p],!1,ft,i,n,a);return i}(t,e,o,i,r);if(n=function(t,e,r,n,o){let i=null;return(r[0]>n[2]||n[0]>r[2]||r[1]>n[3]||n[1]>r[3])&&(0===o?i=gt:2===o?i=t:1!==o&&3!==o||(i=t.concat(e))),i}(t,e,o,i,r),n)return n===gt?null:n;const a=it(function(t,e,r,n,o,i){const s=new T(et),a=[],l=Math.min(n[2],o[2]);let u,p,c;for(;0!==t.length;){let e=t.pop();if(a.push(e),0===i&&e.point[0]>l||2===i&&e.point[0]>n[2])break;if(e.left){p=u=s.insert(e),c=s.minNode(),u=u!==c?s.prev(u):null,p=s.next(p);const r=u?u.key:null;let n;if(R(e,r,i),p&&2===tt(e,p.key,t)&&(R(e,r,i),R(p.key,e,i)),u&&2===tt(u.key,e,t)){let t=u;t=t!==c?s.prev(t):null,n=t?t.key:null,R(r,n,i),R(e,r,i)}}else e=e.otherEvent,p=u=s.find(e),u&&p&&(u=u!==c?s.prev(u):null,p=s.next(p),s.remove(e),p&&u&&tt(u.key,p.key,t))}return a}(s,0,0,o,i,r)),l=[];for(let t=0;t<a.length;t++){let e=a[t];if(e.isExterior()){let t=[e.points];for(let r=0;r<e.holeIds.length;r++){let n=e.holeIds[r];t.push(a[n].points)}l.push(t)}}return l}const dt=(t,e)=>{for(var r=t[0],n=t[1],o=!1,i=0,s=e.length-1;i<e.length;s=i++){var a=e[i][0],l=e[i][1],u=e[s][0],p=e[s][1];l>n!=p>n&&r<(u-a)*(n-l)/(p-l)+a&&(o=!o)}return o},mt=t=>{if("Point"!==t.geometry.type){switch(t.properties.way_geometry=e({},t.geometry),t.geometry.type){case"Polygon":t.properties.mesure=M(t.geometry);break;case"LineString":t.properties.mesure=L(t)}t.geometry=O(t.geometry).geometry}},vt=t=>{if("no"===t.area)return!1;const e=Object.keys(t);return!(!e.includes("building")||"no"===t.building)||(!(!e.includes("landuse")||"no"===t.landuse)||(!(!e.includes("amenity")||"no"===t.amenity)||(!(!e.includes("leisure")||"no"===t.leisure)||(!(!e.includes("area")||"no"===t.area)||(!(!e.includes("place")||"no"===t.place)||(!(!e.includes("shop")||"no"===t.shop)||(!(!e.includes("boundary")||"no"===t.boundary)||(!(!e.includes("tourism")||"no"===t.tourism)||(!(!e.includes("historic")||"no"===t.historic)||(!(!e.includes("public_transport")||"no"===t.public_transport)||(!(!e.includes("office")||"no"===t.office)||(!(!e.includes("building:part")||"no"===t["building:part"])||(!(!e.includes("military")||"no"===t.military)||(!(!e.includes("ruins")||"no"===t.ruins)||(!(!e.includes("craft")||"no"===t.craft)||(!(!e.includes("golf")||"no"===t.golf)||(!(!e.includes("indoor")||"no"===t.indoor)||(!(!e.includes("highway")||!["services","rest_area","escape","elevator"].includes(t.highway))||(!(!e.includes("waterway")||!["riverbank","dock","boatyard","dam"].includes(t.waterway))||(!(!e.includes("barrier")||!["city_wall","ditch","hedge","retaining_wall","wall","spikes"].includes(t.barrier))||(!(!e.includes("railway")||!["station","turntable","roundhouse","platform"].includes(t.railway))||(!(!e.includes("power")||!["plant","substation","generator","transformer"].includes(t.power))||(!(!e.includes("natural")||["coastline","cliff","ridge","arete","tree_row"].includes(t.natural))||(!(!e.includes("man_made")||["cutline","embankment","pipeline"].includes(t.man_made))||!(!e.includes("aeroway")||["taxiway"].includes(t.aeroway))))))))))))))))))))))))))},bt=(t,e)=>{if(!e)return!0;if(!t)return!1;const r=Object.keys(t);for(let t of r)if(e.includes(t))return!0;return!1},wt=(t,e)=>{const r=t.properties.tags;let n={k:"",v:""};for(let t in r)if(e.includes(t))return n={k:t,v:r[t]},n;return null};function Pt(t,e){const r=t.properties.tags;let n={conf:void 0,matchProps:0};for(let t of e){const e=Object.keys(t.tags)[0];let o=0;for(let n in t.tags)r[n]&&r[n]===t.tags[n]&&r[e]?o++:o=0;o>n.matchProps&&(n={conf:t,matchProps:o})}if(n.conf)return n.conf;{const e=t.properties.primaryTag.k?"k":"key",r=t.properties.primaryTag.k?"v":"value",n="".concat(t.properties.primaryTag[e],"/").concat(t.properties.primaryTag[r]),o={key:t.properties.primaryTag[e],icon:"wiki-question",markerColor:"#000000",lbl:{en:"".concat(t.properties.primaryTag[e]," = ").concat(t.properties.primaryTag[r])},presets:[],geometry:[],tags:{},id:n,unknowTags:!0};return o.tags[t.properties.primaryTag[e]]=t.properties.primaryTag[r],o}}function kt(t){t.properties.tags.name?t.properties._name=t.properties.tags.name:t.properties.tags.ref&&(t.properties._name=t.properties.tags.ref),t.properties.meta.timestamp&&(t.properties.time=new Date(t.properties.meta.timestamp).getTime()),t.properties.tags.fixme&&(t.properties.fixme=!0)}function Et(t,e){let r,n=Pt(t,e);return r="node"===t.properties.type?"circle":"LineString"===t.properties.way_geometry.type||"MultiLineString"===t.properties.way_geometry.type?"penta":"Polygon"===t.properties.way_geometry.type||"MultiPolygon"===t.properties.way_geometry.type?"square":"star",t.properties.icon=n.icon?n.icon:"",t.properties.marker="".concat(r,"-").concat(n.markerColor,"-").concat(t.properties.icon),t.properties.hexColor=n.markerColor,t.properties.configId=n.id,n.unknowTags&&(t.properties.unknowTags=!0),n.deprecated?t.properties.deprecated=n.deprecated:t.properties.deprecated&&delete t.properties.deprecated,kt(t),t}const St=(t,r)=>{if(!r)return t;let n=[];for(let t=0;t<r.features.length;t++)n.push(r.features[t].id);for(let e=t.features.length-1;e>=0;e--)n.includes(t.features[e].id)&&t.features.splice(e,1);return e({},t)},Ot=(t,e)=>{if(e&&0!==e.length){return{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"MultiPolygon",coordinates:(r=e.geometry.coordinates,n=t.geometry.coordinates,yt(r,n,1))}}]}}return{type:"FeatureCollection",features:[t]};var r,n};exports.addAttributesToFeature=kt,exports.convert=(t,r)=>{let n=null;r&&r.primaryKeys&&(n=r.primaryKeys);const o="string"==typeof t?JSON.parse(t):t,i={minlat:Number(o.bounds.minlat),minlon:Number(o.bounds.minlon),maxlat:Number(o.bounds.maxlat),maxlon:Number(o.bounds.maxlon)},s=[i.minlon,i.minlat,i.maxlon,i.maxlat],a=(t,e)=>{const r=t[0]==t[t.length-1]?"Polygon":"LineString";let n=[];for(let r=0;r<t.length;r++){const o="node/".concat(t[r]);e[o]&&n.push(e[o].geometry.coordinates)}return"LineString"==r?{type:"LineString",coordinates:n}:"Polygon"==r?{type:"Polygon",coordinates:[n]}:void 0},l=(t,r)=>{const n=e({},t);let o=Array.isArray(n.member)?n.member:[n.member];n.tainted=!1;for(let t=0;t<o.length;t++){let e=o[t];const i="".concat(e.type,"/").concat(e.ref);if(r[i]){let t,n=r[i].geometry;"LineString"===n.type?(e.typeGeom="LineString",t=[...n.coordinates]):"Polygon"===n.type&&(e.typeGeom="Polygon",t=[...n.coordinates[0]]),e.ring=t}else e.ring=null,n.tainted=!0}if(n.tainted)return null;Array.isArray(o)||(o=[o]);const i=o.filter((t=>"outer"===t.role&&"Polygon"===t.typeGeom&&t.ring)),s=o.filter((t=>"inner"===t.role&&"Polygon"===t.typeGeom&&t.ring)),a=o.filter((t=>"outer"===t.role&&"LineString"===t.typeGeom&&t.ring)),l=o.filter((t=>"inner"===t.role&&"LineString"===t.typeGeom&&t.ring));if(0===i.length&&0===a.length)return null;if(a.length>0){const t=u(a.map((t=>t.ring)));for(let e of t)i.push({type:"way",ref:"",role:"outer",typeGeom:"Polygon",ring:e})}if(l.length>0){const t=u(l.map((t=>t.ring)));for(let e of t)s.push({type:"way",ref:"",role:"inner",typeGeom:"Polygon",ring:e})}if(1==i.length){const t=[i[0].ring];for(let e of s)t.push(e.ring);return{type:"Polygon",coordinates:t}}{const t=i.map((t=>[t.ring]));for(let e of s)for(let r=0;r<t.length;r++){let n=t[r][0];const o=e.ring[0];dt(o,n)&&t[r].push(e.ring)}return{type:"MultiPolygon",coordinates:t}}},u=t=>{let e=[],r=t[0].slice();t.splice(0,1);let n=r[0].toString(),o=r[r.length-1].toString(),i=0;for(;0!=t.length&&i<t.length;)t[i][0].toString()==o?(t[i].splice(0,1),r=[...r,...t[i]],t.splice(i,1),n=r[0].toString(),o=r[r.length-1].toString(),i=0):t[i][t[i].length-1].toString()==n?(t[i].splice(t[i].length-1,1),r=[...t[i],...r],t.splice(i,1),n=r[0].toString(),o=r[r.length-1].toString(),i=0):t[i][0].toString()==n?(t[i].splice(0,1),r=[...t[i].reverse(),...r],t.splice(i,1),n=r[0].toString(),o=r[r.length-1].toString(),i=0):t[i][t[i].length-1].toString()==o?(t[i].splice(t[i].length-1,1),r=[...r,...t[i].reverse()],t.splice(i,1),n=r[0].toString(),o=r[r.length-1].toString(),i=0):i++,n==o&&(e.push(r),t.length>0&&(r=t[0].slice(),t.splice(0,1),n=r[0].toString(),o=r[r.length-1].toString(),i=0));return e},p=[],c=[];for(let t of o.elements)if("node"===t.type){const e=t,r={type:"Feature",id:"node/".concat(t.id),properties:{type:"node",id:t.id,meta:{timestamp:t.timestamp,version:t.version,changeset:t.changeset,user:t.user,uid:t.uid}},geometry:{type:"Point",coordinates:[t.lon,t.lat]}};t.tags&&(r.properties.tags=t.tags),c["node/".concat(e.id)]=r}else if("way"===t.type){const e=t,r={type:"Feature",id:"way/".concat(t.id),properties:{type:"way",id:t.id,meta:{timestamp:t.timestamp,version:t.version,changeset:e.changeset,user:t.user,uid:t.uid}}};if(t.tags&&(r.properties.tags=t.tags),t.nodes){const e=[];for(let r of t.nodes){e.push(r);let n=c["node/".concat(r)];n&&(n.properties.usedByWays||(n.properties.usedByWays=[]),n.properties.usedByWays.push("way/".concat(t.id)))}r.ndRefs=e,r.geometry=a(e,c)}c["way/".concat(t.id)]=r}else if("relation"===t.type){const e={type:"Feature",id:"rel/".concat(t.id),properties:{type:"relation",id:t.id,meta:{timestamp:t.timestamp,version:t.version,changeset:t.changeset,user:t.user,uid:t.uid}},member:t.members,tainted:!1};t.tags&&(e.properties.tags=t.tags),Array.isArray(t.members)||(t.members=[t.members]);for(let r of t.members){const t="".concat(r.type,"/").concat(r.ref);c[t]?(c[t].properties.relations||(c[t].properties.relations=[]),c[t].properties.relations.push({rel:e.id,reltags:e.properties.tags,role:r.role})):e.tainted=!0}"multipolygon"===e.properties.tags.type&&p.push("rel/".concat(e.id)),c["rel/".concat(e.id)]=e}for(const t of p){const e=l(c[t],c);e&&(c[t].geometry=e)}const f={type:"FeatureCollection",features:((t,e,r)=>{const o=[];for(let i in t){const s=t[i];if("node"==s.properties.type){if(s.geometry&&s.properties.tags)if(e){let t=wt(s,r);t&&(s.properties.primaryTag=t,Et(s,e),o.push(s))}else kt(s),o.push(s)}else if("way"==s.properties.type){if(s.geometry&&s.properties.tags)if("Polygon"!=s.geometry.type&&"MultiPolygon"!=s.geometry.type||vt(s.properties.tags)||(s.geometry.coordinates=s.geometry.coordinates[0],s.geometry.type="Polygon"==s.geometry.type?"LineString":"MultiLineString"),mt(s),e){let t=wt(s,r);t&&(s.properties.primaryTag=t,Et(s,e),o.push(s))}else kt(s),o.push(s)}else if("relation"==s.properties.type&&s.geometry&&s.properties.tags&&bt(s.properties.tags,n))if("Polygon"!=s.geometry.type&&"MultiPolygon"!=s.geometry.type||vt(s.properties.tags)||(s.geometry.coordinates=s.geometry.coordinates[0],s.geometry.type="Polygon"==s.geometry.type?"LineString":"MultiLineString"),mt(s),e){let t=wt(s,r);t&&(s.properties.primaryTag=t,Et(s,e),o.push(s))}else kt(s),o.push(s)}return o})(c,r.tagConfig,r.primaryKeys)};if(r&&r.oldGeojson&&r.geojsonChanged){const t=Number.isInteger(r.limitFeatures)?r.limitFeatures:9999,e=F(s);if(r.oldGeojson.features.length>t){return{geojson:St(f,r.geojsonChanged),geojsonBbox:Ot(e,null)}}return{geojson:((t,e,r,n)=>{let o=t.features,i=e.features;if(!o||0==o.length)return e;let s=[];for(let t=0;t<o.length;t++)E(o[t],r)&&s.push(o[t].id);for(let t=0;t<i.length;t++){let e=i[t].id;for(let r=0;r<o.length;r++){if(e==o[r].id){o[r]=i[t],s.splice(s.indexOf(e),1);break}r==o.length-1&&o.push(i[t])}}for(let t=0;t<s.length;t++){let e=s[t];for(let t=0;t<o.length;t++)if(o[t].id==e){o.splice(t,1);break}}return St(t,n)})(r.oldGeojson,f,e,r.geojsonChanged),geojsonBbox:Ot(e,r.oldBboxFeature)}}return{geojson:f,geojsonBbox:null}},exports.getConfigTag=Pt,exports.setIconStyle=Et;
